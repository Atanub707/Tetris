name: Build

on:
  push:
    branches:
      - main


jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      # - uses: sonarsource/sonarqube-scan-action@master
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # # If you wish to fail your job when the Quality Gate is red, uncomment the
      # # following lines. This would typically be used to fail a deployment.
      # # - uses: sonarsource/sonarqube-quality-gate-action@master
      # #   timeout-minutes: 5
      # #   env:
      # #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      # - name: install trivy
      #   run: |
      #     #install trivy
      #     sudo apt-get install wget apt-transport-https gnupg lsb-release -y
      #     wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | sudo tee /usr/share/keyrings/trivy.gpg > /dev/null
      #     echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
      #     sudo apt-get update
      #     sudo apt-get install trivy -y
      #     #command to scan files
      #     trivy fs .
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Tag & Build the Docker image
        run: |
          last_version=$(docker image ls atanubiswas/tetris:latest --format "{{.Tag}}" | awk -F. '{print $2}')
          next_version=$((last_version + 1))
          echo "::set-output name=next_version::$next_version"

          # Build the Docker image
          docker build -t atanubiswas/tetris:${{ steps.version.outputs.next_version }} .

      - name: Push the Docker image
        run: |
          docker push atanubiswas/tetris:latest
          docker push atanubiswas/tetris:${{ steps.version.outputs.next_version }}
        env:
          DOCKER_CLI_ACI: true